[
    {
        "ts": "0-00-00",
        "png": "clip-000/slide-0-00-00.png",
        "text": [
            {
                "ts": "0-00-02",
                "text": "counting sort allows us to sort into"
            },
            {
                "ts": "0-00-04",
                "text": "objects in theta and time but let's"
            },
            {
                "ts": "0-00-06",
                "text": "think very carefully about the run time"
            },
            {
                "ts": "0-00-07",
                "text": "so the first thing I want to ask you is"
            },
            {
                "ts": "0-00-10",
                "text": "let's say we want to sort an array of"
            }
        ]
    },
    {
        "ts": "0-00-08",
        "png": "clip-000/slide-0-00-08.png",
        "text": [
            {
                "ts": "0-00-13",
                "text": "the 100 largest world cities by"
            },
            {
                "ts": "0-00-16",
                "text": "population and you have two choices"
            },
            {
                "ts": "0-00-18",
                "text": "quicksort and counting sort as we just"
            },
            {
                "ts": "0-00-20",
                "text": "described so I'd like you to think about"
            },
            {
                "ts": "0-00-22",
                "text": "which one you think has a better"
            },
            {
                "ts": "0-00-23",
                "text": "worst-case runtime"
            },
            {
                "ts": "0-00-25",
                "text": "in seconds so pause think about it and I"
            },
            {
                "ts": "0-00-31",
                "text": "think the key point here is not"
            },
            {
                "ts": "0-00-32",
                "text": "necessarily to get the right answer but"
            },
            {
                "ts": "0-00-34",
                "text": "to get the right reasoning so make sure"
            },
            {
                "ts": "0-00-38",
                "text": "you come up with at least a plausible"
            },
            {
                "ts": "0-00-39",
                "text": "reason before continuing so it turns out"
            },
            {
                "ts": "0-00-45",
                "text": "as you might have guessed just that the"
            },
            {
                "ts": "0-00-47",
                "text": "theme or the feeling of this it's not"
            },
            {
                "ts": "0-00-49",
                "text": "actually counting sort even though it"
            },
            {
                "ts": "0-00-50",
                "text": "has better asymptotic runtime it is"
            },
            {
                "ts": "0-00-52",
                "text": "instead quicksort so why is that well a"
            }
        ]
    },
    {
        "ts": "0-00-51",
        "png": "clip-000/slide-0-00-51.png",
        "text": [
            {
                "ts": "0-00-55",
                "text": "counting based sort if we take here the"
            },
            {
                "ts": "0-00-57",
                "text": "100 world 100 largest world cities by"
            },
            {
                "ts": "0-01-01",
                "text": "metro area sorted by alphabet if we now"
            },
            {
                "ts": "0-01-04",
                "text": "try and sort by population will have"
            },
            {
                "ts": "0-01-07",
                "text": "this annoying property that we need to"
            },
            {
                "ts": "0-01-09",
                "text": "build an array that is of size thirty"
            },
            {
                "ts": "0-01-12",
                "text": "seven million eight hundred thirty two"
            },
            {
                "ts": "0-01-13",
                "text": "thousand eight hundred and ninety two"
            },
            {
                "ts": "0-01-14",
                "text": "which is the population of Tokyo because"
            },
            {
                "ts": "0-01-17",
                "text": "we need to count all the unique possible"
            },
            {
                "ts": "0-01-20",
                "text": "values that have her and in this"
            },
            {
                "ts": "0-01-22",
                "text": "particular case these cities they'll"
            },
            {
                "ts": "0-01-24",
                "text": "always be either 0 or 1 for every single"
            },
            {
                "ts": "0-01-26",
                "text": "count and Tokyo will be at the very"
            },
            {
                "ts": "0-01-28",
                "text": "bottom ok so this is my big old count"
            },
            {
                "ts": "0-01-30",
                "text": "array and eventually we can use this to"
            },
            {
                "ts": "0-01-33",
                "text": "form the sorted list of world cities not"
            },
            {
                "ts": "0-01-35",
                "text": "shown ok"
            },
            {
                "ts": "0-01-36",
                "text": "now counting sort because it has to"
            },
            {
                "ts": "0-01-39",
                "text": "build this gigantic array that's gonna"
            },
            {
                "ts": "0-01-41",
                "text": "take a bunch of time especially imagine"
            },
            {
                "ts": "0-01-43",
                "text": "in Java where I need to actually"
            },
            {
                "ts": "0-01-45",
                "text": "initialize and in any language actually"
            },
            {
                "ts": "0-01-47",
                "text": "if you build counting sort the way we've"
            },
            {
                "ts": "0-01-49",
                "text": "described it we're gonna have to build"
            },
            {
                "ts": "0-01-51",
                "text": "this big arrays let me start a big array"
            },
            {
                "ts": "0-01-53",
                "text": "which has these all these zeros and ones"
            },
            {
                "ts": "0-01-56",
                "text": "in it it's gonna take a long time ok"
            },
            {
                "ts": "0-01-58",
                "text": "quicksort will be faster ok now if we"
            },
            {
                "ts": "0-02-02",
                "text": "have more items if we have an"
            },
            {
                "ts": "0-02-04",
                "text": "arbitrarily large number of items in"
            },
            {
                "ts": "0-02-06",
                "text": "items"
            },
            {
                "ts": "0-02-07",
                "text": "then accounting so we'll actually be"
            },
            {
                "ts": "0-02-09",
                "text": "faster but for this specific use case we"
            },
            {
                "ts": "0-02-12",
                "text": "can see the counting sort will be slower"
            },
            {
                "ts": "0-02-13",
                "text": "because the relative size of that"
            },
            {
                "ts": "0-02-16",
                "text": "alphabet is tiny compared to the number"
            },
            {
                "ts": "0-02-18",
                "text": "of items okay and by alphabet here I"
            },
            {
                "ts": "0-02-21",
                "text": "mean the population of possible"
            },
            {
                "ts": "0-02-23",
                "text": "different keys all the different values"
            },
            {
                "ts": "0-02-25",
                "text": "that could possibly occur so rather than"
            },
            {
                "ts": "0-02-27",
                "text": "having Spade heart diamond and club here"
            },
            {
                "ts": "0-02-30",
                "text": "we have 0 1 2 3 4 all the way up to 37"
            },
            {
                "ts": "0-02-34",
                "text": "million so it's a much bigger set of"
            },
            {
                "ts": "0-02-36",
                "text": "card suits so to speak in particular"
            },
            {
                "ts": "0-02-38",
                "text": "almost 38 million okay so question for"
            }
        ]
    },
    {
        "ts": "0-02-37",
        "png": "clip-000/slide-0-02-37.png",
        "text": [
            {
                "ts": "0-02-42",
                "text": "you what is the run time for counting"
            },
            {
                "ts": "0-02-46",
                "text": "sort on in keys with an alphabet of size"
            },
            {
                "ts": "0-02-48",
                "text": "R and here I want you to treat are not"
            },
            {
                "ts": "0-02-52",
                "text": "as a constant but as a variable okay"
            },
            {
                "ts": "0-02-54",
                "text": "because as we just saw depending on the"
            },
            {
                "ts": "0-02-57",
                "text": "size of your keys it can affect the run"
            }
        ]
    },
    {
        "ts": "0-02-56",
        "png": "clip-000/slide-0-02-56.png",
        "text": [
            {
                "ts": "0-02-59",
                "text": "time the the size of your alphabet that"
            },
            {
                "ts": "0-03-02",
                "text": "is the size of the different values that"
            },
            {
                "ts": "0-03-04",
                "text": "can occur so I will wait here you can"
            },
            {
                "ts": "0-03-07",
                "text": "try and think about the run time for a"
            },
            {
                "ts": "0-03-09",
                "text": "little bit there's a less interesting"
            },
            {
                "ts": "0-03-10",
                "text": "question but I think still worth your"
            },
            {
                "ts": "0-03-11",
                "text": "time to try okay"
            },
            {
                "ts": "0-03-16",
                "text": "so it turns out the run time it's going"
            },
            {
                "ts": "0-03-20",
                "text": "to be in plus our particular theta n"
            }
        ]
    },
    {
        "ts": "0-03-19",
        "png": "clip-000/slide-0-03-19.png",
        "text": [
            {
                "ts": "0-03-23",
                "text": "plus R I and how does that work okay"
            },
            {
                "ts": "0-03-26",
                "text": "well we could just go through each step"
            },
            {
                "ts": "0-03-27",
                "text": "so the first step is we create an array"
            },
            {
                "ts": "0-03-30",
                "text": "of size R to store the counts that takes"
            },
            {
                "ts": "0-03-33",
                "text": "theta R time so for card suits that"
            },
            {
                "ts": "0-03-35",
                "text": "would be for that way the size of my"
            },
            {
                "ts": "0-03-37",
                "text": "array I then create I'm sorry I then"
            },
            {
                "ts": "0-03-40",
                "text": "count the number of each item and so"
            },
            {
                "ts": "0-03-42",
                "text": "that takes theta in because for each"
            },
            {
                "ts": "0-03-44",
                "text": "item I'm going to go increment the"
            },
            {
                "ts": "0-03-45",
                "text": "appropriate array entry in my counter"
            },
            {
                "ts": "0-03-48",
                "text": "array that's theta n I will then"
            },
            {
                "ts": "0-03-51",
                "text": "calculate the target positions or the"
            },
            {
                "ts": "0-03-53",
                "text": "starting positions and that will take"
            },
            {
                "ts": "0-03-55",
                "text": "theta R time because it's just the"
            },
            {
                "ts": "0-03-57",
                "text": "cumulative sum we didn't really talk in"
            },
            {
                "ts": "0-04-00",
                "text": "detail about that operation but it's"
            },
            {
                "ts": "0-04-02",
                "text": "just data are we build another array for"
            },
            {
                "ts": "0-04-04",
                "text": "each entry is equal to the sum of all"
            },
            {
                "ts": "0-04-06",
                "text": "entries above it that takes theta R time"
            },
            {
                "ts": "0-04-09",
                "text": "then I'm going to create an array of"
            },
            {
                "ts": "0-04-11",
                "text": "size n that stores the ordered data"
            },
            {
                "ts": "0-04-13",
                "text": "that's that last piece there's theta in"
            },
            {
                "ts": "0-04-15",
                "text": "the"
            },
            {
                "ts": "0-04-17",
                "text": "I'm going to copy the items from the"
            },
            {
                "ts": "0-04-18",
                "text": "original array to the ordered array and"
            },
            {
                "ts": "0-04-20",
                "text": "that requires us to do the following end"
            },
            {
                "ts": "0-04-22",
                "text": "times first check the target position so"
            },
            {
                "ts": "0-04-25",
                "text": "I look in the array the goat that tracks"
            },
            {
                "ts": "0-04-27",
                "text": "the starting positions or the target"
            },
            {
                "ts": "0-04-29",
                "text": "position and that will be theta 1 I then"
            },
            {
                "ts": "0-04-33",
                "text": "update the target position and then I"
            },
            {
                "ts": "0-04-36",
                "text": "well also have to copy the items I guess"
            },
            {
                "ts": "0-04-40",
                "text": "I'll lift it off in this step but I also"
            },
            {
                "ts": "0-04-42",
                "text": "need to copy the items that's also theta"
            },
            {
                "ts": "0-04-44",
                "text": "1 and then at the very end"
            },
            {
                "ts": "0-04-46",
                "text": "assuming that we actually want to change"
            },
            {
                "ts": "0-04-48",
                "text": "the original array we will copy"
            },
            {
                "ts": "0-04-50",
                "text": "everything from the final array back to"
            },
            {
                "ts": "0-04-52",
                "text": "the beginning they'd it okay in terms of"
            },
            {
                "ts": "0-04-55",
                "text": "memory usage that will be theta n plus R"
            },
            {
                "ts": "0-04-58",
                "text": "because I need to create two arrays of"
            },
            {
                "ts": "0-05-00",
                "text": "size R and one array of size in it okay"
            }
        ]
    }
]