[{'timestamp': 0.03, 'sentence': 'so as we said in the previous video'}, {'timestamp': 1.8, 'sentence': 'counting sort allows us to sort into'}, {'timestamp': 3.929, 'sentence': "objects in theta and time but let's"}, {'timestamp': 5.58, 'sentence': 'think very carefully about the run time'}, {'timestamp': 7.429, 'sentence': 'so the first thing I want to ask you is'}, {'timestamp': 10.019, 'sentence': "let's say we want to sort an array of"}, {'timestamp': 12.75, 'sentence': 'the 100 largest world cities by'}, {'timestamp': 15.54, 'sentence': 'population and you have two choices'}, {'timestamp': 17.51, 'sentence': 'quicksort and counting sort as we just'}, {'timestamp': 20.189, 'sentence': "described so I'd like you to think about"}, {'timestamp': 22.38, 'sentence': 'which one you think has a better'}, {'timestamp': 23.49, 'sentence': 'worst-case runtime'}, {'timestamp': 25.05, 'sentence': 'in seconds so pause think about it and I'}, {'timestamp': 30.72, 'sentence': 'think the key point here is not'}, {'timestamp': 31.949, 'sentence': 'necessarily to get the right answer but'}, {'timestamp': 33.63, 'sentence': 'to get the right reasoning so make sure'}, {'timestamp': 37.59, 'sentence': 'you come up with at least a plausible'}, {'timestamp': 38.94, 'sentence': 'reason before continuing so it turns out'}, {'timestamp': 44.52, 'sentence': 'as you might have guessed just that the'}, {'timestamp': 46.559, 'sentence': "theme or the feeling of this it's not"}, {'timestamp': 48.69, 'sentence': 'actually counting sort even though it'}, {'timestamp': 50.25, 'sentence': 'has better asymptotic runtime it is'}, {'timestamp': 52.05, 'sentence': 'instead quicksort so why is that well a'}, {'timestamp': 54.84, 'sentence': 'counting based sort if we take here the'}, {'timestamp': 57.48, 'sentence': '100 world 100 largest world cities by'}, {'timestamp': 60.96, 'sentence': 'metro area sorted by alphabet if we now'}, {'timestamp': 64.5, 'sentence': 'try and sort by population will have'}, {'timestamp': 67.049, 'sentence': 'this annoying property that we need to'}, {'timestamp': 69.18, 'sentence': 'build an array that is of size thirty'}, {'timestamp': 71.549, 'sentence': 'seven million eight hundred thirty two'}, {'timestamp': 72.99, 'sentence': 'thousand eight hundred and ninety two'}, {'timestamp': 74.46, 'sentence': 'which is the population of Tokyo because'}, {'timestamp': 77.009, 'sentence': 'we need to count all the unique possible'}, {'timestamp': 79.53, 'sentence': 'values that have her and in this'}, {'timestamp': 81.93, 'sentence': "particular case these cities they'll"}, {'timestamp': 83.67, 'sentence': 'always be either 0 or 1 for every single'}, {'timestamp': 85.74, 'sentence': 'count and Tokyo will be at the very'}, {'timestamp': 87.84, 'sentence': 'bottom ok so this is my big old count'}, {'timestamp': 90.24, 'sentence': 'array and eventually we can use this to'}, {'timestamp': 92.759, 'sentence': 'form the sorted list of world cities not'}, {'timestamp': 95.369, 'sentence': 'shown ok'}, {'timestamp': 96.36, 'sentence': 'now counting sort because it has to'}, {'timestamp': 98.82, 'sentence': "build this gigantic array that's gonna"}, {'timestamp': 100.619, 'sentence': 'take a bunch of time especially imagine'}, {'timestamp': 103.2, 'sentence': 'in Java where I need to actually'}, {'timestamp': 104.909, 'sentence': 'initialize and in any language actually'}, {'timestamp': 107.22, 'sentence': "if you build counting sort the way we've"}, {'timestamp': 109.32, 'sentence': "described it we're gonna have to build"}, {'timestamp': 110.939, 'sentence': 'this big arrays let me start a big array'}, {'timestamp': 113.159, 'sentence': 'which has these all these zeros and ones'}, {'timestamp': 115.649, 'sentence': "in it it's gonna take a long time ok"}, {'timestamp': 117.84, 'sentence': 'quicksort will be faster ok now if we'}, {'timestamp': 122.1, 'sentence': 'have more items if we have an'}, {'timestamp': 123.99, 'sentence': 'arbitrarily large number of items in'}, {'timestamp': 125.61, 'sentence': 'items'}, {'timestamp': 126.53, 'sentence': "then accounting so we'll actually be"}, {'timestamp': 129.38, 'sentence': 'faster but for this specific use case we'}, {'timestamp': 131.87, 'sentence': 'can see the counting sort will be slower'}, {'timestamp': 133.43, 'sentence': 'because the relative size of that'}, {'timestamp': 135.68, 'sentence': 'alphabet is tiny compared to the number'}, {'timestamp': 138.2, 'sentence': 'of items okay and by alphabet here I'}, {'timestamp': 141.05, 'sentence': 'mean the population of possible'}, {'timestamp': 143.209, 'sentence': 'different keys all the different values'}, {'timestamp': 144.98, 'sentence': 'that could possibly occur so rather than'}, {'timestamp': 146.9, 'sentence': 'having Spade heart diamond and club here'}, {'timestamp': 150.14, 'sentence': 'we have 0 1 2 3 4 all the way up to 37'}, {'timestamp': 153.86, 'sentence': "million so it's a much bigger set of"}, {'timestamp': 155.69, 'sentence': 'card suits so to speak in particular'}, {'timestamp': 158.33, 'sentence': 'almost 38 million okay so question for'}, {'timestamp': 161.75, 'sentence': 'you what is the run time for counting'}, {'timestamp': 165.65, 'sentence': 'sort on in keys with an alphabet of size'}, {'timestamp': 168.26, 'sentence': 'R and here I want you to treat are not'}, {'timestamp': 171.68, 'sentence': 'as a constant but as a variable okay'}, {'timestamp': 174.35, 'sentence': 'because as we just saw depending on the'}, {'timestamp': 176.989, 'sentence': 'size of your keys it can affect the run'}, {'timestamp': 179.0, 'sentence': 'time the the size of your alphabet that'}, {'timestamp': 182.0, 'sentence': 'is the size of the different values that'}, {'timestamp': 184.43, 'sentence': 'can occur so I will wait here you can'}, {'timestamp': 187.489, 'sentence': 'try and think about the run time for a'}, {'timestamp': 188.63, 'sentence': "little bit there's a less interesting"}, {'timestamp': 189.68, 'sentence': 'question but I think still worth your'}, {'timestamp': 191.45, 'sentence': 'time to try okay'}, {'timestamp': 196.18, 'sentence': "so it turns out the run time it's going"}, {'timestamp': 200.18, 'sentence': 'to be in plus our particular theta n'}, {'timestamp': 203.0, 'sentence': 'plus R I and how does that work okay'}, {'timestamp': 205.7, 'sentence': 'well we could just go through each step'}, {'timestamp': 207.14, 'sentence': 'so the first step is we create an array'}, {'timestamp': 209.57, 'sentence': 'of size R to store the counts that takes'}, {'timestamp': 212.57, 'sentence': 'theta R time so for card suits that'}, {'timestamp': 214.79, 'sentence': 'would be for that way the size of my'}, {'timestamp': 216.68, 'sentence': "array I then create I'm sorry I then"}, {'timestamp': 219.769, 'sentence': 'count the number of each item and so'}, {'timestamp': 221.81, 'sentence': 'that takes theta in because for each'}, {'timestamp': 223.579, 'sentence': "item I'm going to go increment the"}, {'timestamp': 225.47, 'sentence': 'appropriate array entry in my counter'}, {'timestamp': 228.44, 'sentence': "array that's theta n I will then"}, {'timestamp': 231.32, 'sentence': 'calculate the target positions or the'}, {'timestamp': 233.18, 'sentence': 'starting positions and that will take'}, {'timestamp': 235.04, 'sentence': "theta R time because it's just the"}, {'timestamp': 237.23, 'sentence': "cumulative sum we didn't really talk in"}, {'timestamp': 239.72, 'sentence': "detail about that operation but it's"}, {'timestamp': 241.549, 'sentence': 'just data are we build another array for'}, {'timestamp': 243.709, 'sentence': 'each entry is equal to the sum of all'}, {'timestamp': 245.72, 'sentence': 'entries above it that takes theta R time'}, {'timestamp': 248.709, 'sentence': "then I'm going to create an array of"}, {'timestamp': 251.0, 'sentence': 'size n that stores the ordered data'}, {'timestamp': 252.769, 'sentence': "that's that last piece there's theta in"}, {'timestamp': 255.489, 'sentence': 'the'}, {'timestamp': 256.609, 'sentence': "I'm going to copy the items from the"}, {'timestamp': 258.109, 'sentence': 'original array to the ordered array and'}, {'timestamp': 260.03, 'sentence': 'that requires us to do the following end'}, {'timestamp': 261.829, 'sentence': 'times first check the target position so'}, {'timestamp': 264.83, 'sentence': 'I look in the array the goat that tracks'}, {'timestamp': 267.289, 'sentence': 'the starting positions or the target'}, {'timestamp': 269.33, 'sentence': 'position and that will be theta 1 I then'}, {'timestamp': 273.05, 'sentence': 'update the target position and then I'}, {'timestamp': 275.71, 'sentence': 'well also have to copy the items I guess'}, {'timestamp': 280.4, 'sentence': "I'll lift it off in this step but I also"}, {'timestamp': 282.169, 'sentence': "need to copy the items that's also theta"}, {'timestamp': 283.819, 'sentence': '1 and then at the very end'}, {'timestamp': 286.129, 'sentence': 'assuming that we actually want to change'}, {'timestamp': 287.99, 'sentence': 'the original array we will copy'}, {'timestamp': 289.879, 'sentence': 'everything from the final array back to'}, {'timestamp': 292.25, 'sentence': "the beginning they'd it okay in terms of"}, {'timestamp': 295.009, 'sentence': 'memory usage that will be theta n plus R'}, {'timestamp': 297.86, 'sentence': 'because I need to create two arrays of'}, {'timestamp': 300.11, 'sentence': 'size R and one array of size in it okay'}, {'timestamp': 302.539, 'sentence': "so that's the runtime analysis for"}, {'timestamp': 304.879, 'sentence': 'counting sort so the bottom line is that'}, {'timestamp': 307.969, 'sentence': 'if n is bigger than or equal to R then'}, {'timestamp': 310.819, 'sentence': 'we expect reasonable performance but if'}, {'timestamp': 313.699, 'sentence': 'art is really really really big like the'}, {'timestamp': 315.919, 'sentence': 'example of sorting world cities then it'}, {'timestamp': 317.99, 'sentence': "won't be so good so just to note in"}, {'timestamp': 320.479, 'sentence': 'terms of memory usage this n is for the'}, {'timestamp': 322.639, 'sentence': 'ordered array that we build and R as for'}, {'timestamp': 325.009, 'sentence': 'the counts and the starting points and'}, {'timestamp': 326.659, 'sentence': "if you wanted to know which one's"}, {'timestamp': 328.969, 'sentence': 'actually better then we need to do some'}, {'timestamp': 331.219, 'sentence': 'kind of experiments say vs. quicksort to'}, {'timestamp': 334.099, 'sentence': "see which is better and we won't do it"}, {'timestamp': 336.77, 'sentence': 'in this lecture but in the next lecture'}, {'timestamp': 338.21, 'sentence': 'we will actually do a deeper comparison'}, {'timestamp': 340.37, 'sentence': 'of so-called counting sorts and a couple'}, {'timestamp': 342.86, 'sentence': "related sorts we'll talk about later"}, {'timestamp': 344.27, 'sentence': 'today and our earlier comparison based'}, {'timestamp': 346.969, 'sentence': "sorts so that's counting sorts run time"}, {'timestamp': 349.52, 'sentence': 'in a few words and hopefully this makes'}, {'timestamp': 351.65, 'sentence': 'sense I think this is a pretty'}, {'timestamp': 353.089, 'sentence': "straightforward runtime analysis there's"}, {'timestamp': 355.069, 'sentence': 'a lot of little pieces to keep track of'}, {'timestamp': 356.599, 'sentence': "but there's nothing tricky here like"}, {'timestamp': 358.339, 'sentence': 'there was with say merge sort or'}, {'timestamp': 360.11, 'sentence': 'quicksort runtime analysis to see if'}, {'timestamp': 362.779, 'sentence': "this runtime analysis makes sense I'm"}, {'timestamp': 364.789, 'sentence': 'going to ask you a question in which may'}, {'timestamp': 366.349, 'sentence': "or may not be a trick question so let's"}, {'timestamp': 369.11, 'sentence': "say we'd like to sort really really"}, {'timestamp': 370.699, 'sentence': 'really big collections of items from'}, {'timestamp': 372.589, 'sentence': 'some alphabet say card suits or integers'}, {'timestamp': 374.9, 'sentence': 'or whatever which algorithm is going to'}, {'timestamp': 377.27, 'sentence': 'be the fastest counting sort or'}, {'timestamp': 379.4, 'sentence': 'quicksort'}, {'timestamp': 384.6, 'sentence': "okay it's just counting sort so counting"}, {'timestamp': 387.94, 'sentence': 'sorts runtime as n plus R and quicksort'}, {'timestamp': 390.73, 'sentence': 'is in log in and for sufficiently large'}, {'timestamp': 393.61, 'sentence': 'collections if we just eventually have a'}, {'timestamp': 395.74, 'sentence': 'big enough in counting sort will simply'}, {'timestamp': 397.81, 'sentence': 'be faster even sorting integers'}, {'timestamp': 400.0, 'sentence': 'even though R is a really big number if'}, {'timestamp': 401.89, 'sentence': 'n is much much bigger than the set of'}, {'timestamp': 403.9, 'sentence': 'integers'}, {'timestamp': 404.32, 'sentence': 'well then counting sort is going to be'}, {'timestamp': 406.35, 'sentence': 'the winning choice all right so to'}, {'timestamp': 410.14, 'sentence': 'summarize all of our sorts we have our'}, {'timestamp': 413.14, 'sentence': 'heap sort insertion sort merge sort and'}, {'timestamp': 415.03, 'sentence': 'randomized quicksort here so these are'}, {'timestamp': 417.94, 'sentence': 'all different versions of the sorts we'}, {'timestamp': 419.89, 'sentence': 'saw before and now we have a new tool'}, {'timestamp': 421.75, 'sentence': 'called counting sort which takes in plus'}, {'timestamp': 424.45, 'sentence': 'R memory and n plus our runtime but it'}, {'timestamp': 427.18, 'sentence': 'only works if our keys come from some'}, {'timestamp': 429.46, 'sentence': 'kind of an alphabet so it turns out that'}, {'timestamp': 432.4, 'sentence': "there are some things that don't really"}, {'timestamp': 434.17, 'sentence': 'match the definition of an alphabet'}, {'timestamp': 436.48, 'sentence': 'consider for example all strings so'}, {'timestamp': 440.11, 'sentence': "strings there's an uncountably large"}, {'timestamp': 442.3, 'sentence': "sorry there's a countably infinite"}, {'timestamp': 443.62, 'sentence': 'number of strings out there and as a'}, {'timestamp': 446.26, 'sentence': 'result that means that we cannot like'}, {'timestamp': 452.05, 'sentence': "it's you can't just say they're all from"}, {'timestamp': 453.94, 'sentence': "some alphabet it wouldn't make sense"}, {'timestamp': 455.52, 'sentence': "because there's an infinite number and"}, {'timestamp': 458.08, 'sentence': "so that's that means that what we have"}, {'timestamp': 460.21, 'sentence': 'so far counting sort school but we'}, {'timestamp': 461.92, 'sentence': "couldn't really use it without being a"}, {'timestamp': 464.56, 'sentence': 'little bit hackish and how we implement'}, {'timestamp': 466.3, 'sentence': "it we couldn't really implement it with"}, {'timestamp': 468.07, 'sentence': "strings and so what we're gonna see in"}, {'timestamp': 470.14, 'sentence': 'the coming videos is how we can'}, {'timestamp': 471.64, 'sentence': 'generalize counting sort to go even'}, {'timestamp': 473.29, 'sentence': 'beyond alphabet keys and that will give'}, {'timestamp': 475.63, 'sentence': 'us what will be known as a radix sort'}]